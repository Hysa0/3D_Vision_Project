# This script compares the BSSRDF images generated by Blender with the ground truth images.
# It calculates the PSNR and SSIM metrics for each image pair and provides a summary of the results.
#This script have been created with the of copilot of Visual Studio Code.

import cv2
from skimage.metrics import structural_similarity as ssim
from skimage.metrics import peak_signal_noise_ratio as psnr
import os


groundtruth_folder = 'your_path_to_groundtruth_images'  # Replace with the path to your ground truth images
bssrdf_folder = 'your_path_to_bssrdf_images'  # Replace with the path to your BSSRDF images

#Sorting the images in the folders
groundtruth_images = sorted(os.listdir(groundtruth_folder)) 
bssrdf_images = sorted(os.listdir(bssrdf_folder))

#Initialisation of results
results = []
tot_ssim  = 0
tot_psnr = 0
n_images = 0

for grt_image, bsr_image in zip(groundtruth_images, bssrdf_images):

    # grayscale images
    gt_img = cv2.imread(os.path.join(groundtruth_folder, grt_image), cv2.IMREAD_GRAYSCALE)
    bsr_img = cv2.imread(os.path.join(bssrdf_folder, bsr_image), cv2.IMREAD_GRAYSCALE)

    # Reshape BSSRDF image to match ground truth dimensions
    bsr_img_resized = cv2.resize(bsr_img, (gt_img.shape[1], gt_img.shape[0]))

    # Calculation of SSIM et PSNR
    ssim_value = ssim(gt_img, bsr_img_resized)
    psnr_value = psnr(gt_img, bsr_img_resized)

    tot_psnr += psnr_value
    tot_ssim += ssim_value
    n_images += 1

    # Saving results
    results.append({'image': grt_image, 'PSNR': psnr_value, 'SSIM': ssim_value})

    print(f"Image: {grt_image} | PSNR: {psnr_value:.2f} | SSIM: {ssim_value:.4f}")

# Mean PSNR and SSIM calculation
psnr_mean = tot_psnr / n_images if n_images > 0 else 0
ssim_mean = tot_ssim / n_images if n_images > 0 else 0

print("\nResults :")
for result in results:
    print(f"Image: {result['image']} | PSNR: {result['PSNR']:.2f} | SSIM: {result['SSIM']:.4f}")

print(f"\nMeans PSNR : {psnr_mean:.2f}")
print(f"Means SSIM : {ssim_mean:.4f}")
